// dnSpy decompiler from Assembly-CSharp.dll
using System;
using UnityEngine;

public class InvulnerabilityFlash : MonoBehaviour
{
	private void Start()
	{
		this.hero = base.GetComponent<TestVanDammeAnim>();
		this.heroSprite = this.hero.GetComponent<SpriteSM>();
		this.gunSprite = this.hero.gunSprite;
	}

	private void Update()
	{
		if (HeroController.mustShowHUDS)
		{
			if (this.heroSprite != null && this.heroSprite.enabled)
			{
				if (!GameModeController.LevelFinished && (!this.hero.enabled || this.hero.invulnerable))
				{
					float num = 0.5f + Mathf.Sin(Time.time * 25f) * 0.23f;
					Color color = new Color(num, num, num, 1f);
					this.heroSprite.GetComponent<Renderer>().material.SetColor("_TintColor", color);
					this.gunSprite.GetComponent<Renderer>().material.SetColor("_TintColor", (!this.halfAlphaGun) ? color : new Color(color.r, color.g, color.b, 0.5f));
				}
				else
				{
					this.heroSprite.GetComponent<Renderer>().material.SetColor("_TintColor", Color.gray);
					this.gunSprite.GetComponent<Renderer>().material.SetColor("_TintColor", (!this.halfAlphaGun) ? Color.gray : new Color(0.5f, 0.5f, 0.5f, 0.5f));
				}
			}
		}
		else
		{
			this.heroSprite.GetComponent<Renderer>().material.SetColor("_TintColor", Color.gray);
			base.enabled = false;
		}
	}

	private SpriteSM heroSprite;

	private SpriteSM gunSprite;

	private TestVanDammeAnim hero;

	public bool halfAlphaGun;
}
